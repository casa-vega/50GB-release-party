name: Create Release with Multiple Large Files

on:
  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create 1GB file
        run: |
          dd if=/dev/zero of=large_file.bin bs=1M count=1024

      - name: Create Release and Upload Assets
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs').promises;
            
            // Get latest release
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            
            // Determine new version
            let newVersion = 'v1.0.0';
            if (releases.data.length > 0) {
              const latestVersion = releases.data[0].tag_name;
              const versionParts = latestVersion.substring(1).split('.').map(Number);
              versionParts[2]++;
              newVersion = `v${versionParts.join('.')}`;
            }
            
            // Create new release
            const release = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: newVersion,
              name: `Release ${newVersion}`,
              draft: false,
              prerelease: false
            });
            
            // Upload assets
            const fileContent = await fs.readFile('large_file.bin');
            for (let i = 1; i <= 50; i++) {
              await github.rest.repos.uploadReleaseAsset({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: release.data.id,
                name: `large_file_${i}.bin`,
                data: fileContent
              });
              console.log(`Uploaded large_file_${i}.bin`);
            }
