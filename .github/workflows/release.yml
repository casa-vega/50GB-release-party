name: Create Release with Multiple Large Files

on:
  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create 1GB file
        run: |
          dd if=/dev/zero of=large_file.bin bs=1M count=1024

      - name: Get latest release
        id: get_latest_release
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const releases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            if (releases.data.length === 0) {
              return {data: {tag_name: 'v0.0.0'}};
            }
            return releases.data[0];

      - name: Increment release version
        id: increment_version
        run: |
          CURRENT_VERSION=${{ fromJson(steps.get_latest_release.outputs.result).tag_name }}
          CURRENT_VERSION=${CURRENT_VERSION#v}
          IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
          ((VERSION_PARTS[2]++))
          NEW_VERSION="v${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.${VERSION_PARTS[2]}"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.increment_version.outputs.NEW_VERSION }}
          release_name: Release ${{ steps.increment_version.outputs.NEW_VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for i in {1..50}
          do
            asset_name="large_file_${i}.bin"
            curl -X POST \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Content-Type: application/octet-stream" \
              --data-binary @"large_file.bin" \
              "${{ steps.create_release.outputs.upload_url }}?name=$asset_name"
          done
